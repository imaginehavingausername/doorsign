/* --------------------------
   Variables: tweak timing & grid here
   --display: how long each screen stays visible (approx)
   --flip: how long the flip motion takes (per tile window)
   --stagger: step delay between tiles (multiplied by --i)
   --cols / --rows set by JS when building tiles
   --------------------------*/
:root{
  --display: 5s;       /* visible time for each screen */
  --flip: 0.9s;        /* flip window size (each half flip) */
  --stagger: 0.045s;   /* delay step for stagger */
  --tile-size: 56px;
  --gap: 6px;

  /* derived */
  --half-cycle: calc(var(--display) + var(--flip));
  --full-cycle: calc(var(--half-cycle) * 2);

  /* background palettes (kept similar to your original) */
  --bg-center: #28273c;
  --bg-mid: #021027;
  --bg-edge: #0a1b9d;
}

/* --------------------------
   base page & animated radial background (kept from your original file)
   --------------------------*/
*{box-sizing:border-box}
html,body {height:100%;margin:0;font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;}
body{
  color:#f0f0f0;
  overflow:hidden;
  background: radial-gradient(circle at center, var(--bg-center) 0%, var(--bg-mid) 50%, var(--bg-edge) 100%);
  background-size: 300% 300%;
  animation: radialShift 25s ease-in-out infinite alternate;
}

/* radial bg animation (unchanged behavior) */
@keyframes radialShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 70%; }
  100% { background-position: 0% 50%; }
}

/* Stage holds two screens and tiles */
.stage{
  position:relative;
  width:min(94vw,1100px);
  height:min(82vh,760px);
  margin: 3vh auto;
  border-radius: 14px;
  overflow:hidden;
  box-shadow: 0 18px 60px rgba(0,0,0,.6);
  background: transparent; /* let body's radial show through */
}

/* Screens: stacked absolute elements, we animate their opacity on a loop */
.screen{
  position:absolute;
  inset:0;
  display:flex;
  align-items:center;
  justify-content:center;
  padding: 28px;
  text-align:center;
}

/* keep both transparent so radial background is consistent */
.screen-front, .screen-back { background: transparent; color: white; }

/* ---------- front (message) styling ---------- */
.main-message-container{
  display:flex;
  align-items:center;
  justify-content:center;
  height:100%;
  width:100%;
  padding:20px;
}
.text-container{ display:flex; flex-direction:column; gap:6px; max-width:92%; }
.line { margin:0; font-weight:800; text-transform:uppercase; text-shadow:2px 2px 8px rgba(0,0,0,.6); }
.small { font-size: 6.4vw; opacity:.95; }
.big { font-size: 10.2vw; }

/* ---------- back (big countdown) styling ---------- */
#countdown-big {
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  gap: 18px;
  padding: 12px 22px;
  width: min(88%,760px);
}

/* Big title */
.countdown-title {
  font-size: 4.2vw; /* scales with viewport */
  font-weight:700;
  letter-spacing:1.5px;
  text-transform:uppercase;
  opacity:0.95;
}

/* Timer boxes centered and large */
.countdown-timer {
  display:flex;
  gap: 22px;
  justify-content:center;
  align-items:center;
  flex-wrap:wrap;
}

/* each time box */
.time-box {
  display:flex;
  flex-direction:column;
  align-items:center;
  min-width: 90px;
  padding: 10px 16px;
  border-radius: 12px;
  background: rgba(255,255,255,0.04);
  border: 1px solid rgba(255,255,255,0.07);
  box-shadow: 0 6px 18px rgba(0,0,0,0.35);
}

/* big numeric value (much bigger than original) */
.time-box span:first-child {
  font-size: 7.6vw;   /* intentionally large for middle display */
  line-height: 0.9;
  font-weight:800;
  color: #fff;
}

/* label */
.time-box .label {
  font-size: 2.2vw;
  text-transform:uppercase;
  opacity:0.8;
  margin-top:6px;
}

/* ---------- visibility loop (CSS only for swapping) ----------
   animation runs on .stage for consistent timing; screens use smaller visibility keyframes.
   full-cycle = two halves: show front -> flip -> show back -> flip -> repeat
   tweak --display and --flip in :root above to make screens longer/shorter
   ---------- */
.stage { animation: master var(--full-cycle) linear infinite; }

/* screens animate their opacity across the full-cycle */
.screen-front { animation: frontVis var(--full-cycle) linear infinite; }
.screen-back  { animation: backVis var(--full-cycle)  linear infinite; }

/* front visible early in the half-cycle, hidden during the flip around midpoint */
@keyframes frontVis {
  0%   { opacity: 1; pointer-events: auto; transform: none; }
  45%  { opacity: 1; }
  50%  { opacity: 0; pointer-events: none; }
  95%  { opacity: 0; }
  100% { opacity: 1; pointer-events: auto; }
}

/* back is inverse */
@keyframes backVis {
  0%   { opacity: 0; pointer-events: none; }
  45%  { opacity: 0; }
  50%  { opacity: 1; pointer-events: auto; }
  95%  { opacity: 1; }
  100% { opacity: 0; pointer-events: none; }
}

/* ----------------------------
   Tiles grid — sits above screens and performs the flip reveal
   JS sets --cols and --rows, and each tile gets --i for stagger
   ----------------------------*/
.tiles {
  position:absolute;
  inset:0;
  display:grid;
  grid-template-columns: repeat(var(--cols,16), 1fr);
  grid-auto-rows: var(--tile-size);
  gap: var(--gap);
  padding: calc(var(--gap));
  pointer-events:none;
  z-index: 20;
}

/* tile wrapper — we flip the whole tile in 3D */
.tile {
  width:100%;
  height:100%;
  transform-style: preserve-3d;
  perspective: 900px;
  will-change: transform, opacity;
  animation: tileFlip var(--full-cycle) linear infinite;
  /* negative delay seeds staggered cascade across the grid */
  animation-delay: calc(var(--i) * var(--stagger) * -1);
}

/* create triangular faces using ::before/::after and clip-path */
.tile::before,
.tile::after {
  content:'';
  position:absolute;
  inset:0;
  backface-visibility:hidden;
  transform-style:preserve-3d;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
  border-radius: 4px;
}

/* front-face: subtle light */
.tile::before {
  transform: translateZ(0.5px) rotateY(0deg);
  background: rgba(255,255,255,0.04);
  box-shadow: inset 0 -6px 18px rgba(0,0,0,0.25);
}

/* back-face: slightly darker */
.tile::after {
  transform: rotateY(180deg);
  background: rgba(0,0,0,0.18);
}

/* alternate tiles for visual variance */
.tile.tile-alt::before { background: rgba(255,255,255,0.05); }
.tile.tile-alt::after  { background: rgba(0,0,0,0.22); }

/* tile flip keyframes: two flip windows per full cycle (A->B and B->A).
   Values chosen to align with frontVis/backVis timings. */
@keyframes tileFlip {
  0%   { transform: rotateY(0deg); opacity:1; }
  40%  { transform: rotateY(0deg); opacity:1; }
  48%  { transform: rotateY(90deg); opacity:0.96; }
  52%  { transform: rotateY(180deg); opacity:1; }
  60%  { transform: rotateY(180deg); opacity:1; }
  88%  { transform: rotateY(180deg); opacity:1; }
  96%  { transform: rotateY(270deg); opacity:0.96; }
  100% { transform: rotateY(360deg); opacity:1; }
}

/* responsiveness: clamp huge fonts on very narrow screens */
@media (max-width:600px) {
  .big { font-size: 12vw; }
  .small { font-size: 8vw; }
  .time-box span:first-child { font-size: 18vw; }
  .countdown-title { font-size: 6vw; }
}
